// clang-format off
//====================================================================================================================================================
// Copyright 2025 Lake Orion Robotics FIRST Team 302
//
// Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"),
// to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense,
// and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE
// OR OTHER DEALINGS IN THE SOFTWARE.
//====================================================================================================================================================
// This file was automatically generated by the Team 302 code generator version 20.25.00.02
// Generated on Friday, January 24, 2025 10:55:46 PM

#pragma once
#include "configs/MechanismConfig.h"
#include "mechanisms/MechanismTypes.h"
#include "state/StateMgr.h"
#include "mechanisms/LeaderFollowerManager/LeaderFollowerManager.h"

class MechanismConfigThingThree_3 : public MechanismConfig
{
public:
	MechanismConfigThingThree_3() = default;
	~MechanismConfigThingThree_3() = default;

	StateMgr *GetMechanism ( MechanismTypes::MECHANISM_TYPE mechType );

protected:
	void DefineMechanisms() override;

private:
	LeaderFollowerManager* m_theLeaderFollowerManager = nullptr;

	std::unordered_map<MechanismTypes::MECHANISM_TYPE, StateMgr *> m_mechanismMap;
};